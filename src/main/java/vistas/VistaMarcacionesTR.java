/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controladores.HiloMarcacion;
import controladores.MarcacionControlador;
import entidades.Empleado;
import entidades.Marcacion;
import vistas.dialogos.DlgEmpleado;
import vistas.modelos.MTMarcacion;
import com.personal.utiles.FormularioUtil;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.SpinnerNumberModel;
import org.jdesktop.observablecollections.ObservableCollections;

/**
 *
 * @author fesquivelc
 */
public class VistaMarcacionesTR extends javax.swing.JInternalFrame {

    /**
     * Creates new form VistaEmpleado
     */
    private List<Marcacion> lista;
    private MarcacionControlador mc;

    public VistaMarcacionesTR() {
        initComponents();
        mc = new MarcacionControlador();
//        inicializar();
        bindeoSalvaje();
//        buscar();
//        actualizarControlesNavegacion();
//        buscar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lblBusqueda = new org.jdesktop.swingx.JXBusyLabel();
        txtBusqueda = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleado = new org.jdesktop.swingx.JXTable();
        jButton4 = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("LISTADO DE MARCACIONES SIN PROCESAR");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        java.awt.GridBagLayout jPanel1Layout1 = new java.awt.GridBagLayout();
        jPanel1Layout1.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout1.rowHeights = new int[] {0, 5, 0, 5, 0};
        jPanel1.setLayout(jPanel1Layout1);

        lblBusqueda.setText("Empleado");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(lblBusqueda, gridBagConstraints);

        txtBusqueda.setEditable(false);
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(txtBusqueda, gridBagConstraints);

        btnBuscar.setText("Cargar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btnBuscar, gridBagConstraints);

        jScrollPane1.setViewportView(tblEmpleado);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jButton4.setText("...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jButton4, gridBagConstraints);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(btnLimpiar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 115;
        gridBagConstraints.ipady = 545;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
//        lblBusqueda.setBusy(true);
//        paginaActual = 1;
        buscar();
//        actualizarControlesNavegacion();
//        lblBusqueda.setBusy(false);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            lblBusqueda.setBusy(true);
            buscar();
            lblBusqueda.setBusy(false);
        }
    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DlgEmpleado dialogo = new DlgEmpleado(this);
        dialogo.setAgregar(false);
        this.empleadoSeleccionado = dialogo.getSeleccionado();
        if (this.empleadoSeleccionado != null) {
            this.txtBusqueda.setText(
                    empleadoSeleccionado.getNroDocumento()
                    + " " + empleadoSeleccionado.getApellidoPaterno()
                    + " " + empleadoSeleccionado.getApellidoMaterno()
                    + " " + empleadoSeleccionado.getNombre());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        FormularioUtil.limpiarComponente(this.txtBusqueda);
        this.empleadoSeleccionado = null;
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        Thread.currentThread().interrupt();
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXBusyLabel lblBusqueda;
    private org.jdesktop.swingx.JXTable tblEmpleado;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables

    private Empleado empleadoSeleccionado;

    private void bindeoSalvaje() {
        lista = ObservableCollections.observableList(new ArrayList<Marcacion>());

        String[] columnas = {"Nro de documento", "Empleado", "Fecha", "Hora", "Ip de Equipo"};
        MTMarcacion mt = new MTMarcacion(lista, columnas);
        tblEmpleado.setModel(mt);
    }

//    private void buscar() {
//        lista.clear();
//        Date fechaInicio = (Date) spFechaInicio.getValue();
//        Date fechaFin = (Date) spFechaFin.getValue();
//        if (empleadoSeleccionado == null) {
//            lista.addAll(mc.buscarXFecha(fechaInicio, fechaFin));
//        } else {
//            lista.addAll(mc.buscarXFecha(empleadoSeleccionado.getNroDocumento(), fechaInicio, fechaFin));
//        }
//        tblEmpleado.packAll();
//    }

//    private void inicializar() {
//        FormularioUtil.modeloSpinnerFechaHora(this.spFechaInicio, "dd/MM/yyyy");
//        FormularioUtil.modeloSpinnerFechaHora(this.spFechaFin, "dd/MM/yyyy");
//    }
//
//    private int paginaActual = 1;
//    private int totalPaginas = 0;
//    private int tamanioPagina = 0;
//
//    private void buscar() {
//        Date fechaInicio = (Date) spFechaInicio.getValue();
//        Date fechaFin = (Date) spFechaFin.getValue();
//
//        tamanioPagina = Integer.parseInt(cboTamanio.getSelectedItem().toString());
//
//        lista.clear();
//
//        lista.addAll(this.listar(empleadoSeleccionado, fechaInicio, fechaFin, paginaActual, tamanioPagina));
//        
//        tblEmpleado.packAll();
//    }
//
//    private List<Marcacion> listar(Empleado empleado, Date fechaInicio, Date fechaFin, int pagina, int tamanio) {
//        int total;
//        if (empleado == null) {
//            total = mc.totalXFecha(fechaInicio, fechaFin);
//        } else {
//            total = mc.totalXEmpleadoXFecha(empleado.getNroDocumento(), fechaInicio, fechaFin);
//        }
//        if (total % tamanio == 0) {
//            totalPaginas = total / tamanio;
//        } else {
//            totalPaginas = (total / tamanio) + 1;
//        }
//        
//        if(totalPaginas == 0){
//            totalPaginas = 1;
//        }
//
//        if (empleado == null) {
//            return this.mc.buscarXFecha(fechaInicio, fechaFin, (pagina - 1) * tamanio, tamanio);
//        } else {
//            return this.mc.buscarXFecha(empleado.getNroDocumento(), fechaInicio, fechaFin, (pagina - 1) * tamanio, tamanio);
//        }
//
//    }
//
//    private void siguiente() {
//        paginaActual++;
//        buscar();
//        this.actualizarControlesNavegacion();
//    }
//
//    private void ultimo() {
//        paginaActual = totalPaginas;
//        buscar();
//        this.actualizarControlesNavegacion();
//    }
//
//    private void primero() {
//        paginaActual = 1;
//        buscar();
//        this.actualizarControlesNavegacion();
//    }
//
//    private void anterior() {
//        paginaActual--;
//        buscar();
//        this.actualizarControlesNavegacion();
//    }
//
//    private void seleccionPagina() {
//        paginaActual = (int) spPagina.getValue();
//        buscar();
//        this.actualizarControlesNavegacion();
//    }
//
//    private void actualizarControlesNavegacion() {
//        spPagina.setValue(paginaActual);
//        txtTotal.setText(totalPaginas + "");
//
//        SpinnerNumberModel modeloSP = (SpinnerNumberModel) spPagina.getModel();
//        Comparable<Integer> maximo = totalPaginas;
//        modeloSP.setMaximum(maximo);
//
//        this.btnSiguiente.setEnabled(paginaActual != totalPaginas);
//        this.btnUltimo.setEnabled(paginaActual != totalPaginas);
//
//        this.btnAnterior.setEnabled(paginaActual != 1);
//        this.btnPrimero.setEnabled(paginaActual != 1);
//    }

    HiloMarcacion hilo;
    private void buscar() {
        String nroDocumento;
        if(empleadoSeleccionado == null){
            nroDocumento = null;
        }else{
            nroDocumento = empleadoSeleccionado.getNroDocumento();
        }
        if(hilo == null){
            hilo = new HiloMarcacion(nroDocumento, new Date(), lista);
            hilo.start();
        }else{
            hilo.setDni(nroDocumento);
        }
        
        
        
        
    }
}
