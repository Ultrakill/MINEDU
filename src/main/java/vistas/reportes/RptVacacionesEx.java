/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this empleadoslate file, choose Tools | Templates
 * and open the empleadoslate in the editor.
 */
package vistas.reportes;

import controladores.EmpleadoControlador;
import controladores.PeriodoControlador;
import entidades.Departamento;
import entidades.DetalleGrupoHorario;
import entidades.Empleado;
import entidades.EmpleadoBiostar;
import entidades.Periodo;
import java.awt.Component;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.observablecollections.ObservableCollections;
import utiles.UsuarioActivo;
import vista.reportes.procesos.rptVacacionesExcel;
import vistas.dialogos.DlgOficina;

/**
 *
 * @author Aldo
 */
public class RptVacacionesEx extends javax.swing.JInternalFrame {
    
    private final EmpleadoControlador ec;
    private final DateFormat dfFecha;
    /**
     * Creates new form RptVacacionesEx
     */
    public RptVacacionesEx() {
        initComponents();
        ec = new EmpleadoControlador();
        pc = new PeriodoControlador();
        dfFecha = new SimpleDateFormat("dd/MM/yyyy");
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpSeleccion = new javax.swing.ButtonGroup();
        grpRango = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        dFechaInicio = new com.toedter.calendar.JDateChooser();
        dFechaFin = new com.toedter.calendar.JDateChooser();
        cboMes = new com.toedter.calendar.JMonthChooser();
        cboPeriodo = new javax.swing.JComboBox();
        radFechas = new javax.swing.JRadioButton();
        radMes = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        radOficina = new javax.swing.JRadioButton();
        radTodos = new javax.swing.JRadioButton();
        txtOficina = new javax.swing.JTextField();
        btnOficina = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        grpSeleccion.add(radOficina);
        grpSeleccion.add(radTodos);

        grpRango.add(radFechas);
        grpRango.add(radMes);

        setClosable(true);
        setMaximizable(true);
        setTitle("REPORTE VACACIONES");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Rango"));

        cboPeriodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPeriodoActionPerformed(evt);
            }
        });

        radFechas.setText("Fechas:");

        radMes.setText("Mes:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(radMes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radFechas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(radFechas)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(radMes)
                        .addGap(2, 2, 2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecci√≥n de Empleados"));

        radOficina.setSelected(true);
        radOficina.setText("Oficina");
        radOficina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radOficinaActionPerformed(evt);
            }
        });

        radTodos.setText("Todos");

        txtOficina.setEditable(false);
        txtOficina.setBackground(new java.awt.Color(204, 204, 255));

        btnOficina.setText("Oficinas");
        btnOficina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOficinaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radTodos)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(radOficina)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtOficina, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOficina)))
                .addGap(0, 28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radOficina)
                    .addComponent(txtOficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOficina))
                .addGap(14, 14, 14)
                .addComponent(radTodos)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jButton2.setText("Generar Reporte");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton2)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radOficinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radOficinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radOficinaActionPerformed
    private Departamento oficinaSeleccionada;
    private void btnOficinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOficinaActionPerformed
        // TODO add your handling code here:
        DlgOficina oficinas = new DlgOficina(this);
        oficinaSeleccionada = oficinas.getSeleccionado();
        if (oficinaSeleccionada != null) {
            txtOficina.setText(oficinaSeleccionada.getNombre());

        }
    }//GEN-LAST:event_btnOficinaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            imprimir();
        } catch (IOException ex) {
            Logger.getLogger(RptVacacionesEx.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cboPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPeriodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboPeriodoActionPerformed

        private void imprimir() throws IOException {

        Calendar cal = Calendar.getInstance();

        String usuario = UsuarioActivo.getUsuario().getLogin();
        
        List<Empleado> dnis = empleadosPorProcesar();

        for(Empleado empleado : dnis){
            System.out.println("Empleado a imprimir: "+empleado.getNombre()+" "+empleado.getApellidoPaterno()+" "+empleado.getApellidoMaterno());
        }
        
        String reporte = "";

        int anio;
        int mes;
        Date fechaInicio = new Date();
        Date fechaFin = new Date();
        String rangoTitulo = "";
        String rangoValor = "";
        if (radFechas.isSelected()) {
            rangoTitulo = "ENTRE: ";
            fechaInicio = dFechaInicio.getDate();
            fechaFin = dFechaFin.getDate();
            rangoValor = dfFecha.format(fechaInicio) + " - " + dfFecha.format(fechaFin);
        } else if (radMes.isSelected()) {
            rangoTitulo = "MES: ";
            anio = periodoList.get(cboPeriodo.getSelectedIndex()).getAnio();
            mes = cboMes.getMonth();
            cal.set(anio, mes, 1);
            fechaInicio = cal.getTime();
            cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum(Calendar.DAY_OF_MONTH));
            fechaFin = cal.getTime();
            rangoValor = (cboMes.getMonth() + 1) + " / " + anio;
        } 
            System.out.println("Fecha inicio: "+fechaInicio);
            System.out.println("Fecha fin: "+fechaFin);
        
        rptVacacionesExcel rptVac = new rptVacacionesExcel();
        rptVac.crearExcel(dnis, fechaInicio, fechaFin);
    }
     
    
    private List<Empleado> empleadosPorProcesar() {
        List<Empleado> lista = new ArrayList<>();
        if (radOficina.isSelected()) {
            List<EmpleadoBiostar> empleadoBiostar = oficinaSeleccionada.getEmpleadoList();
            List<Integer> dniInt = dniInteger(empleadoBiostar);
            List<Empleado> empleados = ec.buscarPorListaEnteros(dniInt);
            for(Empleado e: empleados){
                lista.add(e);
            }
        }else if(radTodos.isSelected()){
            int cantidad =  ec.buscarXTodos();
            List<Empleado> empleados;
            if(cantidad>2000){
                int resto = cantidad%2000;
                List<String> listaD = new ArrayList<>();
                
                int nConsultas = (cantidad-resto)/2000;
                empleados = ec.buscarTodosX(2000);
                
                for(Empleado empleado : empleados){
                    listaD.add(empleado.getNroDocumento());
                }
                
                if(nConsultas > 1){
                    for(int i = 0; i < nConsultas-1;i++ ){                              
                        List<Empleado> empleados2 = ec.buscarTodosRecursivo(2100,listaD);
                        for(Empleado e:empleados2){
                            empleados.add(e);
                            listaD.add(e.getNroDocumento());
                        }
                    }
                }else{
                    List<Empleado> empleados2 = ec.buscarTodosRecursivo(resto,listaD);
                    for(Empleado e:empleados2){
                        empleados.add(e);
                        listaD.add(e.getNroDocumento());
                    }
                } 
            }else{
                empleados = ec.buscarTodos();
            }
            
            for(Empleado e:empleados){
                lista.add(e);
            }
        }    
        return lista;
    }    

    private List<Integer> dniInteger(List<EmpleadoBiostar> empleados) {
        List<Integer> dni = new ArrayList<>();
        for (EmpleadoBiostar e : empleados) {
            dni.add(e.getId());
        }
        return dni;
    }
    
    private List<Periodo> periodoList;
    private final PeriodoControlador pc;
    
    private void inicializar() {
        //JasperViewer jv = new JasperViewer(null);
        //pnlTab.add("Vista previa", jv.getContentPane());
        //empleadoList = ObservableCollections.observableList(new ArrayList<Empleado>());
        periodoList = pc.buscarTodosOrden();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOficina;
    private com.toedter.calendar.JMonthChooser cboMes;
    private javax.swing.JComboBox cboPeriodo;
    private com.toedter.calendar.JDateChooser dFechaFin;
    private com.toedter.calendar.JDateChooser dFechaInicio;
    private javax.swing.ButtonGroup grpRango;
    private javax.swing.ButtonGroup grpSeleccion;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton radFechas;
    private javax.swing.JRadioButton radMes;
    private javax.swing.JRadioButton radOficina;
    private javax.swing.JRadioButton radTodos;
    private javax.swing.JTextField txtOficina;
    // End of variables declaration//GEN-END:variables
}
